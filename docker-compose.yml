version: "3.8"

services:
  db:
    image: "postgres:15.3-bookworm"
    env_file:
      - .env.prod
    ports:
      - "${PGPORT}:${PGPORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 3
    volumes:
      - ./data_rideshare:/var/lib/postgresql/data
    profiles:
      - "prod"

  db-dev:
    image: "postgres:15.3-bookworm"
    env_file:
      - .env.dev
    ports:
      - "${PGPORT}:${PGPORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 3
    volumes:
      - ./data_rideshare:/var/lib/postgresql/data
    profiles:
      - "dev"

  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.prod
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    profiles:
      - "prod"

  backend-dev:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
    env_file:
      - .env.dev
    depends_on:
      db-dev:
        condition: service_healthy
    volumes:
      - ./src:/usr/src/app/src
      - ./config:/usr/src/app/config
      - ./tsconfig.json:/usr/src/app/tsconfig.json
    ports:
      - "${PORT}:${PORT}"
    profiles:
      - "dev"
